from collections import defaultdict
from yaml import load

files, = glob_wildcards("data/{sample}/outs/filtered_feature_bc_matrix.h5")


include: "rules/spatial.smk"

resolution=config.get("resolution",["0.8","2.5"])

route=config.get("route","standart")

if route == "standart":

    rule all:
        input:
            expand("{sample}/clusteringTree/clusteringTree-{sample}.pdf",sample=files),
            expand(["{sample}/resolution-" + x + "/{sample}.umap.spatial.pdf" for x in resolution],sample=files),
            expand(["{sample}/resolution-" + x + "/{sample}.number-of-cells-per-cluster.xlsx" for x in resolution],sample=files),
            expand(["{sample}/resolution-" + x + "/{sample}.all-markers-forAllClusters.xlsx" for x in resolution],sample=files),
            expand(["{sample}/resolution-" + x + "/{sample}.positive-markers-forAllClusters.xlsx" for x in resolution],sample=files),
            expand("{sample}/spatial-markers/{sample}.spatial_markers.xlsx",sample=files),
            expand("{sample}/technicals/{sample}.n_counts.pdf",sample=files),
            expand("{sample}/technicals/{sample}.normalization.pdf",sample=files),
            expand(["{sample}/resolution-" + x + "/markers" for x in resolution],sample=files),
            expand("{sample}/TissueImage/{sample}.png",sample=files)

elif route == "decon":
    scrnadatafiles, = glob_wildcards("scrna/{datafile}.rds")
    models, = glob_wildcards("models/{modelfile}.rds")
    rule deconvolution:
        input:
            expand("{sample}/deconvolution/spotlight/{sample}-{datafile}.pdf",datafile=scrnadatafiles,sample=files),
            expand("{sample}/deconvolution/gbm/{sample}-{modelfile}.pdf",modelfile=models,sample=files)
            #expand("{sample}/deconvolution/spotlight/{datafile}/"),
            #expand("{sample}/deconvolution/inhouse_gbm/{datafile}/"),
            #expand("{sample}/deconvolution/seurat/{datafile}/")

